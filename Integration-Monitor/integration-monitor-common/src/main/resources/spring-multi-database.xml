<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
   		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    	http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    	http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<import resource="classpath*:database-context.xml" />
	
	<!--配置数据源 -->
	<!-- HIS Database -->
	<bean id="dataSourceHis" name="dataSourceHis" init-method="init"
		destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${database.drivername}" />
		<property name="url" value="${his.url}" />
		<property name="username" value="${his.username}" />
		<property name="password" value="${his.password}" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
		<property name="validationQuery" value="${database.validationQuery}"></property>
	</bean>
	<!-- CIS Database -->
	<bean id="dataSourceCis" name="dataSourceCis" init-method="init"
		destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${database.drivername}" />
		<property name="url" value="${cis.url}" />
		<property name="username" value="${cis.username}" />
		<property name="password" value="${cis.password}" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
		<property name="validationQuery" value="${database.validationQuery}"></property>
	</bean>
	<!-- CPOE Database -->
	<bean id="dataSourceCpoe" name="dataSourceCpoe" init-method="init"
		destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${database.drivername}" />
		<property name="url" value="${cpoe.url}" />
		<property name="username" value="${cpoe.username}" />
		<property name="password" value="${cpoe.password}" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
		<property name="validationQuery" value="${database.validationQuery}"></property>
	</bean>

	<!-- His数据源事务配置 -->
	<!-- 使用spring的会话管理 -->
	<bean id="sqlSessionFactoryHis" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceHis" />
		<property name="mapperLocations" value="classpath:databaseMapper/HisMapper.xml" />
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="mapperScannerConfigurerHis" name="mapperScannerConfigurerHis"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="integration.monitor.common.dao.his" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryHis" />
	</bean>

	<!-- 使用spring的事务管理 -->
	<bean id="transactionManagerHis" name="transactionManagerHis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceHis"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerHis" />





	<!-- 使用spring的会话管理 -->
	<bean id="sqlSessionFactoryCis" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceCis" />
		<property name="mapperLocations" value="classpath:databaseMapper/CisMapper.xml" />
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="mapperScannerConfigurerCis" name="mapperScannerConfigurerCis"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="integration.monitor.common.dao.cis" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryCis" />
	</bean>

	<!-- 使用spring的事务管理 -->
	<bean id="transactionManagerCis" name="transactionManagerCis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceCis"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerCis" />



	<!-- 使用spring的会话管理 -->
	<bean id="sqlSessionFactoryCpoe" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceCpoe" />
		<property name="mapperLocations" value="classpath:databaseMapper/CpoeMapper.xml" />
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="mapperScannerConfigurerCpoe" name="mapperScannerConfigurerCpoe"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="integration.monitor.common.dao.cpoe" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryCpoe" />
	</bean>

	<!-- 使用spring的事务管理 -->
	<bean id="transactionManagerCpoe" name="transactionManagerCpoe"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceCpoe"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerCpoe" />

	<context:component-scan base-package="integration.monitor.common.dao">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

</beans>