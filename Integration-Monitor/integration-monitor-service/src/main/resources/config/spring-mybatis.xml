<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
   		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    	http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    	http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-3.0.xsd">


	<!--引入数据库配置文件jdbc.properties -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<!--配置数据源 -->
<!-- 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
<!-- 	destroy-method="close"> -->
<!-- 	<property name="jdbcUrl" value="${database.url}" /> -->
<!-- 	<property name="driverClass" value="${database.drivername}" /> -->
<!-- 	<property name="user" value="${database.username}" /> -->
<!-- 	<property name="password" value="${database.password}" /> -->
<!-- 	<property name="acquireRetryAttempts" value="30" /> -->
<!-- 	<property name="autoCommitOnClose" value="true" /> -->
<!-- 	<property name="idleConnectionTestPeriod" value="60" /> -->
<!-- 	<property name="initialPoolSize" value="3" /> -->
<!-- 	<property name="maxIdleTime" value="60" /> -->
<!-- 	<property name="maxPoolSize" value="15" /> -->
<!-- 	</bean> -->
	<bean id="dataSource" name="dataSource" init-method="init"
		destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${database.drivername}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
<!-- 		<property name="maxIdle" value="20" /> -->
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
		<property name="validationQuery" value="${database.validationQuery}"></property>
	</bean>
	<!-- 使用spring的会话管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="mapperScannerConfigurer" name="mapperScannerConfigurer"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zju.integration.monitor.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 使用spring的事务管理 -->
	<bean id="transactionManager" name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>